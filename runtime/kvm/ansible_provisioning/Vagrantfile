# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

NUM_WORKERS = 1
K8S_IP_FAMILY = "v4"

MODE = ENV['K8S_IP_FAMILY'] || "v4"
if MODE != "v4" && MODE != "v6" && MODE != "dual"
  raise "K8S_IP_FAMILY env variable should be one of 'v4', 'v6' or 'dual'"
end

K8S_POD_NETWORK_V4_CIDR = "10.10.0.0/16"
K8S_POD_NETWORK_V6_CIDR = "fd02::/48"
if MODE == "v4"
  K8S_POD_NETWORK_CIDR = K8S_POD_NETWORK_V4_CIDR
elsif MODE == "v6"
  K8S_POD_NETWORK_CIDR = K8S_POD_NETWORK_V6_CIDR
else
  K8S_POD_NETWORK_CIDR = K8S_POD_NETWORK_V4_CIDR + "," + K8S_POD_NETWORK_V6_CIDR
end

# Only used for IPv6 clusters
K8S_NODE_CP_GW_V4_IP = "10.10.0.1"
K8S_NODE_CP_GW_V6_IP = "fd02::1"
K8S_NODE_CP_GW_IP = (MODE == "v6") ? K8S_NODE_CP_GW_V6_IP : K8S_NODE_CP_GW_V4_IP

K8S_SERVICE_NETWORK_V4_CIDR = "10.96.0.0/12"
K8S_SERVICE_NETWORK_V6_CIDR = "fd03::/112"

if MODE == "v4"
  K8S_SERVICE_NETWORK_CIDR = K8S_SERVICE_NETWORK_V4_CIDR
elsif MODE == "v6"
  K8S_SERVICE_NETWORK_CIDR = K8S_SERVICE_NETWORK_V6_CIDR
else
  K8S_SERVICE_NETWORK_CIDR = K8S_SERVICE_NETWORK_V4_CIDR + "," + K8S_SERVICE_NETWORK_V6_CIDR
end

NODE_NETWORK_V4_PREFIX = "192.168.77."
NODE_NETWORK2_V4_PREFIX = "192.168.78."
NODE_NETWORK_V6_PREFIX = "fd3b:fcf5:3e92:d732::"

MEMORY = 8292

ENV['VAGRANT_NO_PARALLEL'] = 'yes'
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

	config.ssh.insert_key = false
	config.ssh.private_key_path = ["~/.vagrant.d/insecure_private_key" ]

  config.vm.box = "generic/ubuntu2004"
  config.vm.provider :libvirt do |v|
    v.memory  = MEMORY
    v.nested  = true
    v.cpus    = 2
  end

  # config.vm.provision "shell", path: "bootstrap.sh"
  # Kubernetes Master Server
  config.vm.define "master" do |node|
    node.vm.hostname = "master"

    node_ip = "192.168.77.100"

    if MODE != "v6"
      node.vm.network "private_network", ip: node_ip
      node.vm.network "private_network", ip: NODE_NETWORK2_V4_PREFIX + "100"
    end
    if MODE != "v4"
      node.vm.network "private_network", ip: NODE_NETWORK_V6_PREFIX + "100"
    end

    if MODE != "v4"
      # add a fake default route for IPv6: required for ClusterIP traffic even though it is DNATed
      node.vm.provision :shell, privileged: true, inline: "ip -6 route replace default via " + NODE_NETWORK_V6_PREFIX + "200"
    end
  end

  # Kubernetes Worker Nodes
  NodeCount = 2
  (1..NodeCount).each do |node_id|
    config.vm.define "worker#{node_id}" do |node|
      node.vm.hostname          = "worker#{node_id}"
      node_ip = "192.168.77.#{100 + node_id}"

      if MODE != "v6"
        node.vm.network "private_network", ip: NODE_NETWORK_V4_PREFIX + "#{100 + node_id}"
        node.vm.network "private_network", ip: NODE_NETWORK2_V4_PREFIX + "#{100 + node_id}"
      end
      if MODE != "v4"
        node.vm.network "private_network", ip: node_ipv6
      end

      if MODE != "v4"
        # add a fake default route for IPv6: required for ClusterIP traffic even though it is DNATed
        node.vm.provision :shell, privileged: true, inline: "ip -6 route replace default via " + NODE_NETWORK_V6_PREFIX + "200"
      end
    end
  end
end
