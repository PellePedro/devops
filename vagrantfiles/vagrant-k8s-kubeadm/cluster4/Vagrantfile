# -*- mode: ruby -*-
# vi: set ft=ruby :
VM_ID = "cluster4"
IP_NW = "192.168.14."
IP_START = 10

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"
  config.vm.box_check_update = false

# Single Control-Plane node  
    config.vm.define "#{VM_ID}-master1" do |node|
        node.vm.provider "virtualbox" do |vb|
            vb.name = "#{VM_ID}-master1"
            vb.memory = 1024
            vb.cpus = 2
        end
        node.vm.hostname = "#{VM_ID}-master1"
        node.vm.network :private_network, ip: IP_NW + "#{IP_START}"

        node.vm.provision "setup-hosts", :type => "shell", :path => "scripts/setup-hosts.sh" do |s|
          s.args = ["enp0s8"]
        end
        node.vm.provision "setup-dns", type: "shell", :path => "scripts/update-dns.sh"
        node.vm.provision "install-docker", type: "shell", :path => "scripts/install-docker.sh"
        node.vm.provision "install-k8s", type: "shell", :path => "scripts/install-k8s.sh"
        node.vm.provision "init-k8s", type: "shell", :path => "scripts/init-k8s.sh" do |s|
          s.args = ["enp0s8"]
        end
        node.vm.provision "copy-kubeconfig", type: "shell", :path => "scripts/kubeconfig-setup.sh", privileged: false
        node.vm.provision "install-cni", type: "shell", :path => "scripts/install-calico.sh", privileged: false
    end

# Worker nodes
  (1..2).each do |i|
      config.vm.define "#{VM_ID}-worker#{i}" do |node|
        node.vm.provider "virtualbox" do |vb|
            vb.name = "#{VM_ID}-worker#{i}"
            vb.memory = 2048
            vb.cpus = 2
        end
        node.vm.hostname = "#{VM_ID}-worker#{i}"
        node.vm.network :private_network, ip: IP_NW + "#{IP_START + i}"

        node.vm.provision "setup-hosts", :type => "shell", :path => "scripts/setup-hosts.sh" do |s|
          s.args = ["enp0s8"]
        end
        
        node.vm.provision "setup-dns", type: "shell", :path => "scripts/update-dns.sh"
        node.vm.provision "install-docker", type: "shell", :path => "scripts/install-docker.sh"
        node.vm.provision "install-k8s", type: "shell", :path => "scripts/install-k8s.sh"
        node.vm.provision "join-cluster", type: "shell", :path => "scripts/kubeadm-join.sh"
      end
  end
end
